{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/component/car/car.component.ts","webpack:///src/app/component/car/car.component.html","webpack:///src/app/component/car/car.ts","webpack:///src/app/component/components.module.ts","webpack:///src/app/component/form/form-base.component.ts","webpack:///src/app/component/toast-delete/toast-delete.component.ts","webpack:///src/app/component/toast-delete/toast-delete.component.html","webpack:///src/app/component/toast/toast.component.ts","webpack:///src/app/core/models/photo.ts","webpack:///src/app/enumerable/tipos_de_alert.enum.ts","webpack:///src/app/navigation/nav-menu/nav-menu.component.ts","webpack:///src/app/navigation/nav-menu/nav-menu.component.html","webpack:///src/app/pages/catefory/category.service.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/produtos/cadastro-produto/cadastro-produto.component.ts","webpack:///src/app/pages/produtos/cadastro-produto/cadastro-produto.component.html","webpack:///src/app/pages/produtos/lista/lista.component.ts","webpack:///src/app/pages/produtos/lista/lista.component.html","webpack:///src/app/pages/produtos/produto-form.base.component.ts","webpack:///src/app/pages/produtos/produtos.module.ts","webpack:///src/app/pages/produtos/produtos.routes.ts","webpack:///src/app/pages/produtos/produtos.service.ts","webpack:///src/app/utils/currency-utils.ts","webpack:///src/app/utils/generic-form-validation.ts","webpack:///src/app/utils/validacao.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","AppModule","withServerTransition","appId","declarations","imports","providers","bootstrap","routes","path","component","pathMatch","loadChildren","m","ProdutoRoutesModule","checkoutModule","ShowcaseModule","AppRoutingModule","forRoot","cars","CarComponent","styleUrls","car","item","product","get","productExistInCart","find","push","num","set","reduce","acc","prod","price","index","filter","p","i","remove","Number","localStorage","setItem","JSON","stringify","parse","getItem","length","ComponentsModule","FormBaseComponent","displayMessage","Alert","validationMessages","genericValidator","formInputElements","formGroup","controlBlurs","map","formControl","nativeElement","subscribe","validarFormulario","processarMensagens","mudancasNaoSalvas","messagem","tipo","toastrAlert","toastr","open","ToastDeleteComponent","messageService","resposta","msg","add","severity","summary","detail","clear","emit","console","log","refreshRepos","ToastComponent","tipos","template","Photo","tiposDeAlert","NavMenuComponent","isExpanded","toggle","categoryService","http","url","api","headers","ObterHeaderJson","providedIn","HomeComponent","CadastroProdutoComponent","fb","produtoService","ref","config","imageChangedEvent","showCropper","fileToUpload","getcategory","category","produtoForm","group","categoryId","required","minLength","maxLength","shortDescription","sale","Sale","salePrice","SalePrice","img","brand","data","getProduct","editar","produto","controls","setValue","patchValue","DecimalParaString","dirty","valid","Object","assign","value","StringParaDecimal","atualizarProduto","photo","ProductId","postImg","sucesso","processarSucesso","falha","processarFalha","close","post","messagemToastr","error","response","reset","errors","fail","files","file","openToastr","adicionarProduto","fileChangeEvent","read","ListaComponent","dialogService","cols","field","header","listaProdutos","loading","getProducts","listProdutos","products","width","onClose","resp","erro","deleteConfirm","cadastro","ProdutoBaseComponent","minlength","maxlength","imagem","ProdutosModule","forChild","ProdutosService","formData","FormData","append","toString","roduct","put","CurrencyUtils","input","replace","ret","decArr","split","dec","GenericValidator","container","messages","controlKey","hasOwnProperty","c","childMessages","touched","messageKey","Validacao","controel","environment","production","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './navigation/nav-menu/nav-menu.component';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ComponentsModule } from './component/components.module';\r\nimport { ProdutosModule } from './pages/produtos/produtos.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    ComponentsModule,\r\n    AppRoutingModule,\r\n    OverlayPanelModule,\r\n    BrowserAnimationsModule,\r\n    ProdutosModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, pathMatch: 'full' },\r\n    {\r\n        path: 'produto',\r\n        loadChildren: () => import('./pages/produtos/produtos.routes')\r\n            .then(m => m.ProdutoRoutesModule)\r\n    },\r\n    {\r\n        path: 'checkout',\r\n        loadChildren: () => import('./pages/checkout/checkout.module')\r\n            .then(m => m.checkoutModule)\r\n    },\r\n    {\r\n        path: 'showcase',\r\n        loadChildren: () => import('./pages/showcase/show_case.module')\r\n            .then(m => m.ShowcaseModule)\r\n    },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","import { Component, OnInit, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { car } from './car';\r\n\r\n@Component({\r\n  selector: 'app-car',\r\n  templateUrl: './car.component.html',\r\n  styleUrls: ['./car.component.scss']\r\n})\r\nexport class CarComponent{\r\n  cars: any = new car();\r\n  total:number\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"carrinho\">\r\n  <div id=\"cart\" [ngSwitch]=\"cars.TotalCart() > 0\">\r\n    <div class=\"carrinho-cheio\" *ngSwitchCase=\"true\">\r\n      <h4 class=\"text-center\" id=\"title\"><a [routerLink]=\"['/checkout']\"><span class=\"fa fa-shopping-cart\"></span>\r\n        Carrinho</a></h4>\r\n      <div class=\"order-item\" *ngFor=\"let selected of cars.returnCar(); index as i\">\r\n        <span id=\"title\"><img src=\"{{ selected.img }}\" alt=\"{{ selected.title }}\" id=\"prdFoto\"> {{ selected.title }}</span> <span\r\n          id=\"price\">\r\n          {{ selected.price  * selected.num | currency:'BRL':true:'1.2-2':'pt' }} </span>\r\n        <span class=\"fa fa-times text-danger remov\" (click)=\"cars.remove(selected.id)\"></span>\r\n        <p><small>Quantidade: {{ selected.num }}</small></p>\r\n      </div>\r\n      <div class=\"order-total\">\r\n        <p class=\"order-price\"><span id=\"title\">Valor total:</span>\r\n          {{ cars.GetTotal() | currency:'BRL':true:'1.2-2':'pt' }}</p>\r\n      </div>    <h4 class=\"text-center\" id=\"title\"><a [routerLink]=\"['/checkout']\"><span class=\"fa fa-shopping-cart\"></span>\r\n        Carrinho</a></h4>\r\n    </div>\r\n\r\n    <div class=\"carrinho-vazio\" *ngSwitchCase=\"false\">\r\n      <span id=\"title\" class=\"text-center\"><img id=\"cesta\" class=\"text-center\" \r\n        src=\"assets/img/shopping_basket-24px.svg\" alt=\"Cesta de compras\">\r\n        Você ainda não tem produtos no seu carrinho\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Injectable, EventEmitter, Output, OnChanges, SimpleChanges, OnInit } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class car {\r\n\r\n    setCar(item: any) {\r\n        const product = this.get(),\r\n        productExistInCart = product.find(({ id }) => id == item.id);\r\n        if (!productExistInCart) {\r\n            let product: any[] = this.get();\r\n            product.push({ ...item, num: 1 });\r\n            this.set(product);\r\n            return;\r\n        }\r\n        productExistInCart.num += 1;\r\n        this.set(product);\r\n    }\r\n\r\n    GetTotal() {\r\n        return this.get().reduce((acc, prod) => acc += prod.price * prod.num, 0)\r\n    }\r\n\r\n    remove(index: number) {\r\n        let product = this.get().filter((p, i) => {\r\n            return p.id !== index\r\n        })\r\n        this.set(product);\r\n    }\r\n    quantiy(item, num:number) {\r\n        const product = this.get()\r\n        if (num == 0) {\r\n            this.remove(item.id)\r\n        } else {\r\n            const productExistInCart = product.find(({ id }) => id == item.id);\r\n            productExistInCart.num = Number(num);\r\n            this.set(product);\r\n        }\r\n    }\r\n\r\n    private set(product: any) {\r\n        localStorage.setItem('car', JSON.stringify(product))\r\n    }\r\n\r\n    private get() {\r\n        return JSON.parse(localStorage.getItem('car'))\r\n            ? JSON.parse(localStorage.getItem('car')) : []\r\n    }\r\n\r\n    returnCar() {\r\n        return JSON.parse(localStorage.getItem('car'))\r\n    }\r\n\r\n    TotalCart() {\r\n        return this.get().length;\r\n    }\r\n\r\n}","import { CommonModule, registerLocaleData } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport localePt from '@angular/common/locales/pt';\r\nregisterLocaleData(localePt);\r\nimport { CarComponent } from './car/car.component'\r\nimport { car } from './car/car';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ToastDeleteComponent } from './toast-delete/toast-delete.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToastComponent } from './toast/toast.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CarComponent,\r\n    ToastDeleteComponent,\r\n    ToastComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ToastModule,\r\n  ],\r\n  providers: [car],\r\n  bootstrap: [],\r\n  exports: [\r\n    ToastDeleteComponent,\r\n    CarComponent,\r\n    ToastComponent\r\n  ],\r\n})\r\nexport class ComponentsModule { }\r\n","import { ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Observable, fromEvent, merge } from 'rxjs';\r\nimport { tiposDeAlert } from 'src/app/enumerable/tipos_de_alert.enum';\r\nimport { DisplayMessage, GenericValidator, ValidationMessages } from 'src/app/utils/generic-form-validation';\r\n\r\n\r\n\r\nexport abstract class FormBaseComponent {\r\n\r\n    displayMessage: DisplayMessage = {};\r\n    genericValidator: GenericValidator;\r\n    validationMessages: ValidationMessages;\r\n    toastr: string;\r\n    Alert = tiposDeAlert;\r\n    toastrAlert: any;\r\n    \r\n    mudancasNaoSalvas: boolean;\r\n\r\n    protected configurarMensagensValidacaoBase(validationMessages: ValidationMessages) {\r\n        this.genericValidator = new GenericValidator(validationMessages);\r\n    }\r\n\r\n    protected configurarValidacaoFormularioBase(\r\n        formInputElements: ElementRef[],\r\n        formGroup: FormGroup) {\r\n\r\n        let controlBlurs: Observable<any>[] = formInputElements\r\n            .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n        merge(...controlBlurs).subscribe(() => {\r\n            this.validarFormulario(formGroup)\r\n        });\r\n    }\r\n\r\n    protected validarFormulario(formGroup: FormGroup) {\r\n        this.displayMessage = this.genericValidator.processarMensagens(formGroup);\r\n        this.mudancasNaoSalvas = true;\r\n    }\r\n\r\n    messagemToastr(messagem,tipo) {\r\n        this.toastrAlert = tipo;\r\n        this.toastr = messagem;\r\n    }\r\n    openToastr(open:boolean){\r\n        if(open) this.toastrAlert = null;\r\n    }\r\n}","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-toast-delete',\r\n  templateUrl: './toast-delete.component.html',\r\n  styleUrls: ['./toast-delete.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class ToastDeleteComponent {\r\n\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  @Input() set messagem(msg: string) {\r\n    console.log(msg)\r\n    this.refreshRepos(msg);\r\n  }\r\n\r\n  @Output() resposta = new EventEmitter<boolean>();\r\n\r\n  refreshRepos(msg: string) {\r\n    \r\n    if (msg) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Info Message', detail: msg });\r\n    }\r\n  }\r\n\r\n  onConfirm() {\r\n    this.messageService.clear();\r\n    this.resposta.emit(true);\r\n  }\r\n  onReject() {\r\n    this.messageService.clear();\r\n    this.resposta.emit(false);\r\n  }\r\n\r\n\r\n}\r\n","<p-toast position=\"center\" [modal]=\"true\" [baseZIndex]=\"5000\">\r\n    <ng-template let-message pTemplate=\"message\">\r\n        <div style=\"text-align: center\">\r\n            <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 3em\"></i>\r\n            <h3>{{message.summary}}</h3>\r\n            <p>{{message.detail}}</p>\r\n        </div>\r\n        <div class=\"p-grid ui-fluid center\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"onConfirm()\">Yes</button>\r\n                <button type=\"button\" class=\"btn btn-light\" (click)=\"onReject()\">No</button>\r\n        </div>\r\n    </ng-template>\r\n</p-toast>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { tiposDeAlert } from 'src/app/enumerable/tipos_de_alert.enum';\r\n\r\n@Component({\r\n  selector: 'app-toast',\r\n  template: '<p-toast [position]=\"position\"></p-toast>',\r\n  providers: [MessageService]\r\n})\r\nexport class ToastComponent {\r\n\r\n  constructor(private messageService: MessageService) { }\r\n  Alert = tiposDeAlert\r\n\r\n  @Input() messagem :number\r\n  @Input() position: string;\r\n  @Input() set tipo (tipos: number){\r\n    this.refreshRepos(tipos);\r\n  }\r\n  @Output() open  = new EventEmitter<boolean>();\r\n\r\n  refreshRepos(tipo: number) {\r\n    if (tipo) {\r\n      this.messageService.add({ severity: this.Alert[tipo], \r\n        summary: `${this.Alert[tipo]} Message`, detail: `${this.messagem}` });\r\n    }\r\n    this.open.emit(true)\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class Photo {\r\n    ProductId:number\r\n    file:File\r\n}","export enum tiposDeAlert{\r\n    success = 1,\r\n    info = 2,\r\n    warn = 3,\r\n    error = 4\r\n}","import { Component } from '@angular/core';\r\nimport { car } from 'src/app/component/car/car';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n  cars: any = new car();\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Início</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\" [attr.aria-expanded]=\"isExpanded\" (click)=\"toggle()\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Link</a>\r\n          </li>\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Dropdown link\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\" [ngClass]=\"{ show: isExpanded }\">\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link fa fa-shopping-cart\" (mouseover)=\"op.show($event)\" [routerLink]=\"['/checkout']\">\r\n              {{cars.TotalCart()}}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n\r\n<p-overlayPanel #op [dismissable]=\"true\">\r\n  <app-car></app-car>\r\n</p-overlayPanel>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment'\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from 'src/app/core/models/category.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class categoryService {\r\n  protected readonly url = `${environment.api}/Category`;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  protected ObterHeaderJson() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  getcategory(): Observable<Category[]> {\r\n    return this.http\r\n      .get<Category[]>(this.url, this.ObterHeaderJson());\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>home works!</p>\r\n","import { Component, OnInit, ViewChildren, ElementRef } from '@angular/core';\r\n\r\nimport { FormControlName, FormBuilder, Validators } from '@angular/forms';\r\nimport { ProdutoBaseComponent } from '../produto-form.base.component';\r\nimport { Validacao } from 'src/app/utils/validacao';\r\nimport { CurrencyUtils } from 'src/app/utils/currency-utils';\r\nimport { tiposDeAlert } from 'src/app/enumerable/tipos_de_alert.enum'\r\nimport { categoryService } from '../../catefory/category.service';\r\nimport { ProdutosService } from '../produtos.service';\r\nimport { Photo } from 'src/app/core/models/photo';\r\nimport { ProductModel } from 'src/app/core/models/product.model';\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-produto',\r\n  templateUrl: './cadastro-produto.component.html',\r\n  styleUrls: ['./cadastro-produto.component.css'],\r\n})\r\nexport class CadastroProdutoComponent extends ProdutoBaseComponent implements OnInit {\r\n\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\r\n\r\n  imageChangedEvent: any = '';\r\n  id: number\r\n  showCropper = false;\r\n  fileToUpload: File = null;\r\n  errors: any;\r\n  constructor(private fb: FormBuilder,\r\n    private produtoService: ProdutosService,\r\n    private categoryService: categoryService,\r\n    public ref: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n  ) { super(); }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoryService.getcategory()\r\n      .subscribe(\r\n        category => this.category = category\r\n      );\r\n\r\n    this.produtoForm = this.fb.group({\r\n      categoryId: [Number, [Validators.required]],\r\n      title: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(200)]],\r\n      shortDescription: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(1000)]],\r\n      sale: [false, [Validacao.Sale]],\r\n      salePrice: ['', [Validacao.SalePrice]],\r\n      img: [''],\r\n      brand: ['', [Validators.required]],\r\n      price: ['', [Validators.required]],\r\n      //ativo: [true]\r\n    });\r\n    if (this.config.data.id) {\r\n      this.produtoService.getProduct(this.config.data.id).subscribe(\r\n        (product:ProductModel) => {\r\n          delete product.category\r\n          this.editar(product)\r\n          this.produto = product;\r\n        })\r\n    } else {\r\n      this.produtoForm.controls['salePrice'].setValue(\"0.00\")\r\n    }\r\n  }\r\n\r\n  editar(produto: ProductModel) {\r\n    this.produtoForm.patchValue({\r\n      categoryId: produto.categoryId,\r\n      title: produto.title,\r\n      shortDescription: produto.shortDescription,\r\n      sale: produto.sale,\r\n      salePrice: CurrencyUtils.DecimalParaString(produto.salePrice),\r\n      brand: produto.brand,\r\n      price: CurrencyUtils.DecimalParaString(produto.price),\r\n    });\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    super.configurarValidacaoFormulario(this.formInputElements);\r\n\r\n\r\n  }\r\n\r\n  adicionarProduto() {\r\n    if (this.produtoForm.dirty && this.produtoForm.valid) {\r\n\r\n      this.produto = Object.assign({}, this.produto, this.produtoForm.value);\r\n\r\n      this.produto.categoryId = Number(this.produto.categoryId)\r\n      this.produto.price = CurrencyUtils.StringParaDecimal(this.produto.price)\r\n      this.produto.salePrice = CurrencyUtils.StringParaDecimal(this.produto.salePrice);\r\n\r\n      if (this.config.data.id) {\r\n        debugger\r\n        this.produtoService.atualizarProduto(this.produto)\r\n          .subscribe(\r\n            (produto: ProductModel) => {\r\n              if (this.photo) {\r\n                this.photo.ProductId = this.produto.id\r\n                this.produtoService.postImg(this.photo)\r\n                  .subscribe(\r\n                    sucesso => {\r\n                      this.processarSucesso(sucesso);\r\n                    },\r\n                    falha => { this.processarFalha(falha) }\r\n                  );\r\n              }\r\n              this.ref.close(produto);\r\n            },\r\n            falha => { this.processarFalha(falha) }\r\n          )\r\n      } else {\r\n        this.produto.img = null;\r\n        this.produtoService.post(this.produto)\r\n          .subscribe(\r\n            (produto: ProductModel) => {\r\n              this.photo.ProductId = produto.id\r\n              this.ref.close(produto);\r\n              this.produtoService.postImg(this.photo)\r\n                .subscribe(\r\n                  sucesso => { this.processarSucesso(sucesso); },\r\n                  falha => { this.processarFalha(falha) }\r\n                );\r\n            },\r\n            falha => { this.processarFalha(falha) }\r\n          );\r\n      }\r\n      this.mudancasNaoSalvas = false;\r\n    } else {\r\n      this.messagemToastr('Ocorreu um erro', tiposDeAlert.error)\r\n    }\r\n  }\r\n\r\n  processarSucesso(response: any) {\r\n    this.produtoForm.reset();\r\n    this.errors = [];\r\n  }\r\n\r\n  processarFalha(fail: any) {\r\n    this.errors = fail.error.errors;\r\n    this.messagemToastr('Ocorreu um erro', tiposDeAlert.error)\r\n  }\r\n\r\n  fileChangeEvent(files: FileList): void {\r\n\r\n    this.photo = new Photo\r\n    this.photo.file = files.item(0)\r\n    // this.imageChangedEvent = event;\r\n    // this.imagemNome = event.currentTarget.files[0].name;\r\n  }\r\n  sale() {\r\n    return this.produtoForm.controls.sale.value\r\n  }\r\n  imageLoaded() {\r\n    this.showCropper = true;\r\n  }\r\n\r\n  loadImageFailed() {\r\n    this.errors.push('O formato do arquivo  não é aceito.');\r\n  }\r\n}\r\n\r\n","<app-toast [messagem]=\"toastr\" [position]=\"'top-center'\" [tipo]=\"toastrAlert\" (open)=\"openToastr($event)\"></app-toast>\r\n\r\n<div class=\"container main-container\">\r\n    <hr>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\">\r\n            <form enctype=\"multipart/form-data\" (ngSubmit)=\"adicionarProduto()\" [formGroup]=\"produtoForm\">\r\n\r\n                <div class=\"alert alert-danger\" *ngIf=\"errors.length > 0\">\r\n                    <h3 id=\"msgRetorno\">Opa! Alguma coisa não deu certo:</h3>\r\n                    <ul>\r\n                        <li *ngFor=\"let error of errors\">{{ error }}</li>\r\n                    </ul>\r\n                </div>\r\n                <div *ngIf=\"config.data.id\" class=\"form-group\">\r\n                    <label class=\"control-label\">ID</label>\r\n                    <input class=\"form-control\" id=\"id\" type=\"text\"\r\n                            value=\"{{config.data.id}}\" disabled />\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Categoria</label>\r\n                    <select class=\"form-control\" id=\"categoryId\" formControlName=\"categoryId\" [ngClass]=\"{'is-invalid': displayMessage.categoryId }\">\r\n                        <option *ngFor=\"let item of category\" value=\"{{ item.id }}\">{{ item.description }}</option>\r\n                    </select>\r\n                    <span class=\"text-danger\" *ngIf=\"displayMessage.categoryId\">\r\n                        <p [innerHTML]=\"displayMessage.categoryId\"></p>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Titulo</label>\r\n                    <div>\r\n                        <input class=\"form-control\" id=\"title\" type=\"text\" placeholder=\"Titulo (requerido)\"\r\n                            formControlName=\"title\" [ngClass]=\"{'is-invalid': displayMessage.title }\" />\r\n                        <span class=\"text-danger\" *ngIf=\"displayMessage.title\">\r\n                            <p [innerHTML]=\"displayMessage.title\"></p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Descrição</label>\r\n                    <div>\r\n                        <textarea cols=\"40\" rows=\"5\" maxlength=\"1000\" class=\"form-control\" id=\"shortDescription\"\r\n                            placeholder=\"Descrição (requerido)\" formControlName=\"shortDescription\"\r\n                            [ngClass]=\"{'is-invalid': displayMessage.shortDescription }\"></textarea>\r\n                        <span class=\"text-danger\" *ngIf=\"displayMessage.shortDescription\">\r\n                            <p [innerHTML]=\"displayMessage.shortDescription\"></p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-group form-check\">\r\n                        <label class=\"form-check-label\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"sale\" formControlName=\"sale\" name=\"sale\"\r\n                                value=\"true\"> Preço promocional\r\n                        </label>\r\n                    </div>\r\n                    <div [hidden]=\"!sale()\" class=\"form-group\">\r\n                        <label class=\"control-label\">Valor promocional</label>\r\n                        <div>\r\n                            <input class=\"form-control\" id=\"salePrice\" type=\"text\" placeholder=\"valor promocional (requerido)\"\r\n                                formControlName=\"salePrice\" [ngClass]=\"{'is-invalid': displayMessage.salePrice }\" />\r\n                                \r\n                                <span class=\"text-danger\" *ngIf=\"displayMessage.salePrice\">\r\n                                <p [innerHTML]=\"displayMessage.salePrice\"></p>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">image do Produto</label>\r\n\r\n                    <div class=\"custom-file\">\r\n                        <input type=\"file\" accept=\"image/jpeg,image/png\" class=\"custom-file-input\" id=\"img\"\r\n                            formControlName=\"img\" (change)=\"fileChangeEvent($event.target.files)\"\r\n                            [ngClass]=\"{'is-invalid': displayMessage.img }\">\r\n                        <label data-browse=\"Procurar\" style=\"width: 400px\" class=\"custom-file-label\"></label>\r\n                        <!-- <span *ngIf='imagemNome'><br>{{ imgNome }}<br></span> -->\r\n                        <span class=\"text-danger\" *ngIf=\"displayMessage.img\">\r\n                            <p [innerHTML]=\"displayMessage.img\"></p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Marca</label>\r\n                    <div>\r\n                        <input class=\"form-control\" id=\"brand\" type=\"text\" placeholder=\"Marca (requerido)\"\r\n                            formControlName=\"brand\" [ngClass]=\"{'is-invalid': displayMessage.brand }\" />\r\n                        <span class=\"text-danger\" *ngIf=\"displayMessage.brand\">\r\n                            <p [innerHTML]=\"displayMessage.brand\"></p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Valor</label>\r\n                    <div>\r\n                        <input class=\"form-control\" id=\"Price\" type=\"tel\" placeholder=\"valor (requerido)\"\r\n                            formControlName=\"price\" [ngClass]=\"{'is-invalid': displayMessage.price }\" [brmasker]=\"{money: true,thousand: '.',  decimalCaracter: ','}\" />\r\n                        <span class=\"text-danger\" *ngIf=\"displayMessage.price\">\r\n                            <p [innerHTML]=\"displayMessage.price\"></p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <!-- <div class=\"form-group form-check\">\r\n                    <label class=\"form-check-label\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"ativo\" formControlName=\"ativo\" name=\"ativo\" value=\"true\"> Ativo?\r\n                    </label>\r\n                </div> -->\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"submit\" id=\"cadastroProduto\" [disabled]=\"!produtoForm.valid\" value=\"Cadastrar\"\r\n                        class=\"btn btn-primary\">&nbsp;\r\n                    <!-- <a class=\"btn btn-info\" href=\"/produtos/listar-todos\">Voltar</a> -->\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/core/models/product.model';\r\nimport { ProdutosService } from '../produtos.service';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { CadastroProdutoComponent } from '../cadastro-produto/cadastro-produto.component';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-lista-produto',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.css'],\r\n  providers: [DialogService, MessageService]\r\n})\r\nexport class ListaComponent implements OnInit {\r\n\r\n  constructor(\r\n    private produtoService: ProdutosService,\r\n    public dialogService: DialogService,\r\n  ) { }\r\n\r\n  products: ProductModel[];\r\n  ref: DynamicDialogRef\r\n  cols: any[];\r\n  loading: boolean;\r\n  msg: string = null\r\n  product :ProductModel\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      { field: 'title', header: 'Titulo' },\r\n      { field: 'brand', header: 'Marca' },\r\n      { field: 'price', header: 'Preço' },\r\n      { field: 'sale', header: 'Promoção' },\r\n      { field: 'category', header: 'Categoria' },\r\n    ];\r\n    this.listaProdutos();\r\n  }\r\n\r\n  listaProdutos() {\r\n    this.loading = true;\r\n    this.produtoService.getProducts().subscribe(listProdutos => {\r\n      this.products = listProdutos\r\n    }, error => console.log(error)\r\n      , () => {\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  cadastro() {\r\n    this.ref = this.dialogService.open(CadastroProdutoComponent, {\r\n      header: 'Cadastro De Produto',\r\n      data: {\r\n        id: null\r\n      },\r\n      width: '80%'\r\n    });\r\n    this.ref.onClose.subscribe((product: ProductModel) => {\r\n      this.products.push(product);\r\n    });\r\n  }\r\n\r\n  delete(product: ProductModel) {\r\n    this.msg = `teste ${product.title}`\r\n    this.product = product\r\n  }\r\n\r\n  edit(product: ProductModel) {\r\n    this.ref = this.dialogService.open(CadastroProdutoComponent, {\r\n      header: 'Editar De Produto',\r\n      data: {\r\n        id: product.id\r\n      },\r\n      width: '80%'\r\n    });\r\n    this.ref.onClose.subscribe((product: ProductModel) => {\r\n      this.listaProdutos();\r\n    });\r\n  }\r\n  deleteConfirm(resp: boolean) {\r\n    if (resp) {\r\n      this.produtoService.delete(this.product.id).subscribe(resp => {\r\n        console.log(resp)\r\n      }, erro => console.log(erro)\r\n        , () => {\r\n          this.listaProdutos();\r\n        }\r\n      )\r\n      this.msg = null\r\n    }\r\n  }\r\n}\r\n","<app-toast-delete [messagem]=\"msg\" (resposta)=deleteConfirm($event)></app-toast-delete>\r\n\r\n<button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"cadastro()\">Cadastro</button>\r\n\r\n<p-table [columns]=\"cols\" [lazy]=\"true\" [value]=\"products\" [paginator]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [loading]=\"loading\">\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n            <th *ngFor=\"let col of columns\">\r\n                {{col.header}}\r\n            </th>\r\n            <th>\r\n\r\n            </th>\r\n        </tr>\r\n        <!-- <tr>\r\n            <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\">\r\n                <input *ngSwitchCase=\"'title'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\">\r\n            </th>\r\n        </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"rowData\">\r\n            <td *ngFor=\"let col of columns\">\r\n                {{rowData[col.field]}}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(rowData)\"><i\r\n                        class=\"pi pi-trash\"></i></button>\r\n                <button type=\"button\" class=\"btn btn-warning\" (click)=\"edit(rowData)\"><i\r\n                        class=\"pi pi-pencil\"></i></button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>","\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ElementRef } from '@angular/core';\r\nimport { FormBaseComponent } from 'src/app/component/form/form-base.component';\r\nimport { ProductModel } from 'src/app/core/models/product.model';\r\nimport { Photo } from 'src/app/core/models/photo';\r\nimport { Category } from 'src/app/core/models/category.model';\r\n\r\nexport abstract class ProdutoBaseComponent extends FormBaseComponent {\r\n\r\n    produto: ProductModel;\r\n    category: Category[];\r\n    photo:Photo;\r\n    errors: any[] = [];\r\n    produtoForm: FormGroup;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.validationMessages = {\r\n            categoryId: {\r\n                required: 'Escolha um categoria',\r\n            },\r\n            title: {\r\n                required: 'Informe o Titulo',\r\n                minlength: 'Mínimo de 2 caracteres',\r\n                maxlength: 'Máximo de 200 caracteres'\r\n            },\r\n            shortDescription: {\r\n                required: 'Informe a descrição',\r\n                minlength: 'Mínimo de 2 caracteres',\r\n                maxlength: 'Máximo de 1000 caracteres'\r\n            },\r\n            imagem: {\r\n                required: 'Informe a Imagem',\r\n            },\r\n            brand: {\r\n                required: 'Informe a marca',\r\n            },\r\n            salePrice: {\r\n                required: 'Informe o valor',\r\n            },\r\n            price: {\r\n                required: 'Informe o valor',\r\n            }\r\n        }\r\n\r\n        super.configurarMensagensValidacaoBase(this.validationMessages);\r\n    }\r\n\r\n    protected configurarValidacaoFormulario(formInputElements: ElementRef[]) {\r\n        super.configurarValidacaoFormularioBase(formInputElements, this.produtoForm);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CadastroProdutoComponent } from './cadastro-produto/cadastro-produto.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ComponentsModule } from 'src/app/component/components.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProdutoRoutesModule } from './produtos.routes';\r\nimport { ListaComponent } from './lista/lista.component';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { BrMaskerModule } from 'br-mask';\r\n@NgModule({\r\n  declarations: [\r\n    CadastroProdutoComponent,\r\n    ListaComponent,\r\n  ],\r\n  imports: [\r\n    BrMaskerModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    ComponentsModule,\r\n    HttpClientModule,\r\n    ProdutoRoutesModule,\r\n    TableModule,\r\n    DynamicDialogModule\r\n  ]\r\n})\r\nexport class ProdutosModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DetalhesProdutoComponent } from \"../showcase/detalhes-produto/detalhes-produto.component\";\r\nimport { CadastroProdutoComponent } from \"./cadastro-produto/cadastro-produto.component\";\r\nimport { ListaComponent } from \"./lista/lista.component\";\r\n\r\nconst routes: Routes = [\r\n\r\n    { path: '', component: ListaComponent},\r\n    { path: 'cadastro', component: CadastroProdutoComponent }\r\n]\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)]\r\n})\r\nexport class ProdutoRoutesModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment'\r\nimport { ProductModel } from 'src/app/core/models/product.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Photo } from 'src/app/core/models/photo';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdutosService {\r\n  protected readonly url = `${environment.api}/product`;\r\n  protected readonly img = `${environment.api}/product/upload`;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  protected ObterHeaderJson() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  getProducts(): Observable<ProductModel[]> {\r\n    return this.http\r\n      .get<ProductModel[]>(this.url, this.ObterHeaderJson());\r\n  }\r\n\r\n  getProduct(id: string): Observable<ProductModel> {\r\n    return this.http\r\n      .get<ProductModel>(`${this.url}/${id}`, this.ObterHeaderJson());\r\n  }\r\n\r\n  post(product: ProductModel) {\r\n    return this.http\r\n      .post(this.url, product, this.ObterHeaderJson());\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http\r\n      .delete(`${this.url}/${id}`,this.ObterHeaderJson());\r\n  }\r\n  postImg(photo: Photo) {\r\n    const formData = new FormData();\r\n    formData.append('ProductId', photo.ProductId.toString());\r\n    formData.append('file', photo.file);\r\n\r\n    return this.http.post(`${this.img}`, formData)\r\n  }\r\n\r\n  atualizarProduto(roduct: ProductModel): Observable<ProductModel> {\r\n    return this.http\r\n      .put<ProductModel>(`${this.url}/${roduct.id}`, roduct, this.ObterHeaderJson());\r\n  }\r\n}","export class CurrencyUtils {\r\n\r\n    public static StringParaDecimal(input): any {\r\n        if (input === null) return 0;\r\n        input = input.replace(/\\D/g, '').replace(/([0-9]{2})$/g, \".$1\")\r\n        return Number(input);\r\n    }\r\n\r\n    public  static DecimalParaString(input): any {\r\n        var ret = (input) ? input.toString().replace(\".\", \",\") : null;\r\n        if (ret) {\r\n            var decArr = ret.split(\",\");\r\n            if (decArr.length > 1) {\r\n                var dec = decArr[1].length;\r\n                if (dec === 1) { ret += \"0\"; }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\nexport class GenericValidator {\r\n    constructor(private validationMessages: ValidationMessages) { }\r\n\r\n    processarMensagens(container: FormGroup): { [key: string]: string } {\r\n        let messages = {};\r\n        for (let controlKey in container.controls) {\r\n            if (container.controls.hasOwnProperty(controlKey)) {\r\n                let c = container.controls[controlKey];\r\n\r\n                if (c instanceof FormGroup) {\r\n                    let childMessages = this.processarMensagens(c);\r\n                    Object.assign(messages, childMessages);\r\n                } else {\r\n                    if (this.validationMessages[controlKey]) {\r\n                        messages[controlKey] = '';\r\n                        if ((c.dirty || c.touched) && c.errors) {\r\n                            Object.keys(c.errors).map(messageKey => {\r\n                                if (this.validationMessages[controlKey][messageKey]) {\r\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + '<br />';\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return messages;\r\n    }\r\n}\r\n\r\nexport interface DisplayMessage {\r\n    [key: string]: string\r\n}\r\nexport interface ValidationMessages {\r\n    [key: string]: { [key: string]: string } \r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\n\r\nlet sale: boolean = false\r\nexport class Validacao {\r\n\r\n\r\n\r\n    static SalePrice(controel: AbstractControl) {\r\n        const price = controel.value\r\n        if (sale) {\r\n            if (!price && !sale) return { salePrice: true };\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    static Sale(controel: AbstractControl) {\r\n        sale = controel.value\r\n        return null\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'https://localhost:5001/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n// export { renderModule, renderModuleFactory } from '@angular/platform-server';"]}