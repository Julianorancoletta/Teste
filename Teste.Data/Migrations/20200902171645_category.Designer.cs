// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Data.Context;

namespace Teste.Data.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20200902171645_category")]
    partial class category
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste.Business.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Teste.Business.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("brandid")
                        .HasColumnType("int");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<int>("detailsid")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("sale")
                        .HasColumnType("bit");

                    b.Property<decimal>("salePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subCategoriaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("brandid");

                    b.HasIndex("categoryid");

                    b.HasIndex("detailsid");

                    b.HasIndex("subCategoriaid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Teste.Business.Models.gallery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subtitle")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.ToTable("galleries");
                });

            modelBuilder.Entity("Teste.Business.Models.product.Brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("Teste.Business.Models.product.Details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Garantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProdutoPeso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesEmbalagemA")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesEmbalagemL")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesEmbalagemP")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesProdutoA")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesProdutoL")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("dimensoesProdutoP")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("embalagemPeso")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id");

                    b.ToTable("detail");
                });

            modelBuilder.Entity("Teste.Business.Models.product.Specs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("galleryid")
                        .HasColumnType("int");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<decimal>("size")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("specs")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("typeid")
                        .HasColumnType("int");

                    b.Property<string>("warranty")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.HasIndex("galleryid");

                    b.HasIndex("productid");

                    b.HasIndex("typeid");

                    b.ToTable("specs");
                });

            modelBuilder.Entity("Teste.Business.Models.product.SubCategoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.ToTable("SubCategoria");
                });

            modelBuilder.Entity("Teste.Business.Models.product.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.ToTable("type");
                });

            modelBuilder.Entity("Teste.Business.Models.Product", b =>
                {
                    b.HasOne("Teste.Business.Models.product.Brand", "brand")
                        .WithMany()
                        .HasForeignKey("brandid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Business.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Business.Models.product.Details", "details")
                        .WithMany()
                        .HasForeignKey("detailsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Business.Models.product.SubCategoria", "subCategoria")
                        .WithMany()
                        .HasForeignKey("subCategoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Teste.Business.Models.product.Specs", b =>
                {
                    b.HasOne("Teste.Business.Models.gallery", "gallery")
                        .WithMany()
                        .HasForeignKey("galleryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Business.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Business.Models.product.Type", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Teste.Business.Models.product.SubCategoria", b =>
                {
                    b.HasOne("Teste.Business.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
